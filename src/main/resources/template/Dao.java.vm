package ${package}.${moduleName}.dao;

import ${package}.${moduleName}.entity.${className}Entity;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.baomidou.mybatisplus.core.conditions.Wrapper;
import com.baomidou.mybatisplus.core.toolkit.Constants;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package}.${moduleName}.domain.${className};
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import ${package}.${moduleName}.domain.vo.${className}.${className}ListVo;
import ${package}.${moduleName}.domain.vo.${className}.${className}Vo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

/**
 * @author ${author}
 * @description ${comments}
 * @date ${datetime}
 */
@Mapper
public interface ${className}Mapper extends BaseMapper<${className}> {

    /**
    * @author ${author}
    * @date ${datetime}
    * @description ${comments} 分页查询
    * TODO 这里要手动修改
    */
    @Select({
            "SELECT",
#foreach ($column in $columns)
    #if($column.columnName != $pk.columnName)
            "${alisa}.$column.columnName,",
    #end
#end
#foreach ($column in $columns)
    #if($column.columnName == $pk.columnName)
            "${alisa}.$column.columnName",
    #end
#end
            "FROM",
            "${tableName} ${alisa} ",
            "${ew.customSqlSegment}"
    })
    List<${className}ListVo> queryList(Page page, @Param(Constants.WRAPPER) Wrapper wrapper);

    /**
     * @author ${author}
     * @date ${datetime}
     * @description ${comments} 详情查询
     * TODO 这里要手动修改
     * @return
     */
    @Select({
            "SELECT",
#foreach ($column in $columns)
    #if($column.columnName != $pk.columnName)
            "${alisa}.$column.columnName,",
    #end
#end
#foreach ($column in $columns)
    #if($column.columnName == $pk.columnName)
            "${alisa}.$column.columnName",
    #end
        #end
            "FROM",
            "${tableName} ${alisa} ",
            "${ew.customSqlSegment}"
    })
    ${className}Vo queryInfo(@Param(Constants.WRAPPER) Wrapper wrapper);


}
